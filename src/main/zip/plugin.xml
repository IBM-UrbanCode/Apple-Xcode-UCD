<?xml version="1.0" encoding="UTF-8"?>
<!--
- Licensed Materials - Property of IBM Corp.
- IBM UrbanCode Deploy
- (c) Copyright IBM Corporation 2011, 2014. All Rights Reserved.
-
- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
- GSA ADP Schedule Contract with IBM Corp.
-->
<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1"
        xmlns:server="http://www.urbancode.com/PluginServerXMLSchema_v1"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <header>
    <identifier id="com.ibm.rational.iOS" name="Apple Xcode" version="2"/>
    <description>
        Provides mobile support for working with Apple Xcode to deploy 
        iOS applications.
    </description>
    <tag>Mobile/Apple Xcode</tag>
    <server:required-server-version>6.0.1.0</server:required-server-version>
  </header>
  
  <!-- Application management based steps -->
  
  <step-type name="Install Application">
    <description>Installs the iOS application (.ipa or .app).</description>
    <properties>
      <property name="app" required="true">
        <property-ui type="textBox"
                     label="Application Path"
                     description="The path to the iOS application (.app or .ipa file) 
                        to install on the target. The default value is the 
                        application property that is configured in the component 
                        properties."
                     default-value="${p:component/application}"/>
      </property>
      <property name="udid">
        <property-ui type="textBox"
                     label="Device Identifier"
                     description="The unique device identifier of the physical device 
                        that is the installation target. If the device identifier is 
                        specified, then the Target OS value is ignored."
                     default-value="${p?:resource/deviceID}"/>
      </property>
      <property name="simType">
        <property-ui type="textBox"
                     label="Simulator Type"
                     description="The simulator device type, for example, iPhone or 
                        iPhone Retina (4-inch 64-bit)."
                     default-value="${p?:resource/simulatorType}"/>
      </property>
      <property name="targetOS">
        <property-ui type="textBox"
                     label="Target OS"
                     description="The target OS, for example, 6.1 or 7.1."
                     default-value="${p?:resource/simulatorOS}"/>
      </property>
      <property name="reinstall">
        <property-ui type="checkBox"
                     label="Reinstall"
                     description="Reinstall the app. You must select this option if 
                        the app is already installed in the target. Otherwise, the 
                        step fails."/>
      </property>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"
                     hidden="true"/>
      </property>
      <property name="timeout">
        <property-ui type="textBox"
                     label="Timeout"
                     description="The amount of time (in milliseconds) to attempt to 
                        install the app on the target device. By default, the step 
                        uses a timeout of 5 minutes. This property does not apply 
                        to simulators."
                     default-value="300000"
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        properties.put("Status", "Success");
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            function testOutput(lineNumber, line) {
                commandOut.println("Recieved Error");
                commandOut.println(lineNumber.toString() + " : " + line);
                var errors = properties.get("Error");
                if (errors == null) {
                    errors = new java.util.ArrayList();
                }
                errors.add(line);
                properties.put("Error", errors);

                properties.put("Status", "Failure");
            }
            scanner.register("(?i)Failure", function(lineNumber, line) {
                testOutput(lineNumber, line)
            });
            scanner.register("(?i)Error", function(lineNumber, line) {
                testOutput(lineNumber, line)
            });
            scanner.scan();

            var errors = properties.get("Error");
            if (errors != null) {
                properties.put("Error", errors.toString());
            }
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="installApp.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <step-type name="Remove Application">
    <description>Removes the iOS application.</description>
    <properties>
      <property name="bundleID" required="true">
        <property-ui type="textBox"
                     label="Bundle Identifier"
                     description="The bundle identifier of the application to 
                        remove, for example, com.example.appName. The default 
                        value is the bundle identifier that is configured in 
                        the component properties."
                     default-value="${p:component/bundleID}"/>
      </property>
      <property name="udid">
        <property-ui type="textBox"
                     label="Device Identifier"
                     description="The unique device identifier of the physical device 
                        that is the removal target. If the device identifier is 
                        specified, then the Target OS value is ignored."
                     default-value="${p?:resource/deviceID}"/>
      </property>
      <property name="simType">
        <property-ui type="textBox"
                     label="Simulator Type"
                     description="The simulator device type, for example, iPhone or 
                        iPhone Retina (4-inch 64-bit)."
                     default-value="${p?:resource/simulatorType}"/>
      </property>
      <property name="targetOS">
        <property-ui type="textBox"
                     label="Target OS"
                     description="The target OS, for example, 6.1 or 7.1."
                     default-value="${p?:resource/simulatorOS}"/>
      </property>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"
                     hidden="true"/>
      </property>
      <property name="timeout">
        <property-ui type="textBox"
                     label="Timeout"
                     description="The amount of time (in milliseconds) to attempt to 
                        uninstall the app on the target device. By default, the step 
                        uses a timeout of 5 minutes. This property does not apply 
                        to simulators."
                     default-value="300000"
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Error"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="uninstallApp.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <!-- Test based steps -->
  
  <step-type name="UI Test">
    <description>
        Runs the specified test case that simulates a user interacting with 
        an application.
    </description>
    <properties>
      <property name="app" required="true">
        <property-ui type="textBox"
                     label="Application Path"
                     description="The path to the iOS application (.app or .ipa file) 
                        to test on the target. The default value is the application 
                        property that is configured in the component properties."
                     default-value="${p:component/application}"/>
      </property>
      <property name="script" required="true">
        <property-ui type="textBox"
                     label="Test Script"
                     description="The test script file (.js) to run."/>
      </property>
      <property name="outputDir" required="true">
        <property-ui type="textBox"
                     label="Output Directory"
                     description="The directory for test output. The directory
                        must exist before you specify it. If the path that you 
                        specify for output does not exist, the process fails."
                     default-value="."/>
      </property>
      <property name="udid">
        <property-ui type="textBox"
                     label="Device Identifier"
                     description="The unique device identifier of the physical 
                        device that is the test target. If you are testing on a 
                        device, then you must first install the app. If the 
                        device identifier is specified, then the Target OS 
                        value is ignored."
                     default-value="${p?:resource/deviceID}"/>
      </property>
      <property name="simType">
        <property-ui type="textBox"
                     label="Simulator Type"
                     description="The simulator device type, for example, iPhone or 
                        iPhone Retina (4-inch 64-bit)."
                     default-value="${p?:resource/simulatorType}"/>
      </property>
      <property name="targetOS">
        <property-ui type="textBox"
                     label="Target OS"
                     description="The target OS, for example, 6.1 or 7.1."
                     default-value="${p?:resource/simulatorOS}"/>
      </property>
      <property name="xcode">
        <property-ui type="textBox"
                     label="Path to Xcode"
                     description="The path to the Xcode installation. If no value is 
                        specified, the default value /Applications/Xcode.app is used."
                     default-value="${p?:resource/XcodePath}"
                     hidden="true"/>
      </property>
      <property name="traceTemplate">
        <property-ui type="textBox"
                     label="Trace Template"
                     description="The path, which is specified as relative to the 
                        Xcode installation path, for the .tracetemplate file to 
                        use when the UI test is run. If no value is specified, a 
                        default value of /Contents/Applications/Instruments.app/
                        Contents/PlugIns/AutomationInstrument.bundle/Contents/
                        Resources/Automation.tracetemplate is used."
                     default-value="${p?:resource/XcodeTraceTemplate}"
                     hidden="true"/>
      </property>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"
                     hidden="true"/>
      </property>
      <property name="timeout">
        <property-ui type="textBox"
                     label="Timeout"
                     description="A timeout (in milliseconds), after which the 
                        UI test are stopped. By default, the step does not 
                        time out."
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        properties.put("Status", "Success");
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            function testOutput(lineNumber, line) {
                commandOut.println("Recieved Error");
                commandOut.println(lineNumber.toString() + " : " + line);
                var errors = properties.get("Error");
                if (errors == null) {
                    errors = new java.util.ArrayList();
                }
                errors.add(line);
                properties.put("Error", errors);

                properties.put("Status", "Failure");
            }
            scanner.register("(?i)Error:", function(lineNumber, line) {
                testOutput(lineNumber, line)
            });
            scanner.register("Fail:", function(lineNumber, line) {
                testOutput(lineNumber, line)
            });
            scanner.register("Instruments Trace Error", function(lineNumber, line) {
                testOutput(lineNumber, line)
            });
            scanner.scan();

            var errors = properties.get("Error");
            if (errors != null) {
                properties.put("Error", errors.toString());
            }
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="uiTest.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <step-type name="Unit Test">
    <description>Runs the specified unit test against the application.</description>
    <properties>
      <property name="project">
        <property-ui type="textBox"
                     label="Project Name"
                     description="The name of the project to use for testing."/>
      </property>
      <property name="workspace">
        <property-ui type="textBox"
                     label="Workspace Name"
                     description="The name of the workspace to use for testing.
                        If a project is specified, the workspace value is ignored."/>
      </property>
      <property name="scheme" required="true">
        <property-ui type="textBox"
                     label="Scheme Name"
                     description="The name of the scheme to use for testing."/>
      </property>
      <property name="destination">
        <property-ui type="textAreaBox"
                     label="Destination String"
                     description="A line-separated list or file of strings that represents 
                        the destination to test against by using the xcodebuild syntax.
                        For example, &quot;platform=iOS Simulator,name=iPhone,OS=7.1&quot;. 
                        If the destination string is specified, the device identifier, 
                        simulator type, and target OS are ignored."/>
      </property>
      <property name="udid">
        <property-ui type="textBox"
                     label="Device Identifier"
                     description="The unique device identifier of the physical device 
                        that is the test target. If the device identifier is 
                        specified, then the target OS value is ignored."
                     default-value="${p?:resource/deviceID}"/>
      </property>
      <property name="simType">
        <property-ui type="textBox"
                     label="Simulator Type"
                     description="The simulator device type, for example, iPhone or 
                        iPhone Retina (4-inch 64-bit)."
                     default-value="${p?:resource/simulatorType}"/>
      </property>
      <property name="targetOS">
        <property-ui type="textBox"
                     label="Target OS"
                     description="The target OS, for example, 6.1 or 7.1.
                        Note: If no target OS is specified, the default most recent value 
                        is used."
                     default-value="${p?:resource/simulatorOS}"/>
      </property>
      <property name="destinationTimeout">
        <property-ui type="textBox"
                     label="Destination Search Timeout"
                     description="The amount of time to search for the test target. 
                        If the target is not located, the step fails. The system 
                        default value is used if no value is specified. (See 
                        &quot;man xcodebuild&quot; for details)."
                     hidden="true"/>
      </property>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"
                     hidden="true"/>
      </property>
      <property name="timeout">
        <property-ui type="textBox"
                     label="Timeout"
                     description="A timeout (in milliseconds), after which the 
                        unit test stops. By default, the step does not 
                        time out."
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="unitTest.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <!-- Tools based steps -->
  
  <step-type name="xcrun">
    <description>Runs the iOS xcrun command.</description>
    <properties>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"/>
      </property>
      <property name="additionalArgs">
        <property-ui type="textAreaBox"
                     label="Additional Arguments"
                     description="Additional arguments for the xcrun tool. The 
                        format can be a path to a file or a new line-separated list 
                        of arguments. For example, /opt/test.properties or --show-sdk-path."/>
      </property>
      <property name="timeout">
        <property-ui type="textBox"
                     label="Timeout"
                     description="The amount of time (in milliseconds) to attempt to 
                        run the xcrun command on the target. By default, the step does 
                        not time out."
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="xcrun.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <!-- Simulator based steps -->

  <step-type name="Start Simulator">
    <description>
        Starts a simulator. The step fails if a simulator is already running.
    </description>
    <properties>
      <property name="simType">
        <property-ui type="textBox"
                     label="Simulator Type"
                     description="The simulator device type, for example, iPhone or 
                        iPhone Retina (4-inch 64-bit)."
                     default-value="${p?:resource/simulatorType}"/>
      </property>
      <property name="targetOS">
        <property-ui type="textBox"
                     label="Target OS"
                     description="The target OS, for example, 6.1 or 7.1."
                     default-value="${p?:resource/simulatorOS}"/>
      </property>
      <property name="xcode">
        <property-ui type="textBox"
                     label="Path to Xcode"
                     description="The path to the Xcode installation. If no value is 
                        specified, the default value /Applications/Xcode.app is used."
                     default-value="${p?:resource/XcodePath}"
                     hidden="true"/>
      </property>
      <property name="xcrunPath">
        <property-ui type="textBox"
                     label="Path to xcrun"
                     description="The path to the xcrun tool. If the 
                        value is not specified, the value from the
                        system path is used."
                     default-value="${p?:resource/xcrunPath}"
                     hidden="true"/>
      </property>
      <property name="startupRetries" required="true">
        <property-ui type="textBox"
                     label="Startup Polling Maximum Retries"
                     description="The maximum number of times to attempt polling for
                        a simulator startup every 10 seconds. The default value is 10."
                     default-value="10"
                     hidden="true"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="startSimulator.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <step-type name="Stop Simulator">
    <description>
        Stops the running simulator. The step fails if no simulator is running.
    </description>
    <properties/>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes"/>
      <arg file="stopSimulator.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
</plugin>
